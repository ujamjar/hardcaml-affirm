# OASIS_START
# DO NOT EDIT (digest: 4c7a6937d04a3a91c3a00941acb22e7a)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library HardCamlAffirm
"src/HardCamlAffirm.cmxs": use_HardCamlAffirm
"src/props.cmx": for-pack(HardCamlAffirm)
"src/sat.cmx": for-pack(HardCamlAffirm)
"src/dimacs.cmx": for-pack(HardCamlAffirm)
"src/transform_state.cmx": for-pack(HardCamlAffirm)
"src/NuSMV.cmx": for-pack(HardCamlAffirm)
"src/bmc.cmx": for-pack(HardCamlAffirm)
"src/waves.cmx": for-pack(HardCamlAffirm)
<src/*.ml{,i,y}>: pkg_hardcaml
<src/*.ml{,i,y}>: pkg_hardcaml-waveterm.lterm
# Executable counter
<examples/counter.{native,byte}>: pkg_hardcaml
<examples/counter.{native,byte}>: pkg_hardcaml-waveterm.lterm
<examples/counter.{native,byte}>: pkg_hardcaml.syntax
<examples/counter.{native,byte}>: use_HardCamlAffirm
<examples/counter.{native,byte}>: custom
# Executable tx-state
<examples/tx_state.{native,byte}>: pkg_hardcaml
<examples/tx_state.{native,byte}>: pkg_hardcaml-waveterm.lterm
<examples/tx_state.{native,byte}>: pkg_hardcaml.syntax
<examples/tx_state.{native,byte}>: use_HardCamlAffirm
<examples/*.ml{,i,y}>: pkg_hardcaml
<examples/*.ml{,i,y}>: pkg_hardcaml-waveterm.lterm
<examples/*.ml{,i,y}>: pkg_hardcaml.syntax
<examples/*.ml{,i,y}>: use_HardCamlAffirm
<examples/tx_state.{native,byte}>: custom
# OASIS_STOP
